{"version":3,"sources":["components/Header/Header.js","components/Footer/Footer.js","assets/video.mp4","components/Home/Home.js","components/About/About.js","components/RecipeListing/Recipecard.js","components/RecipeListing/SearchBox.js","components/RecipeListing/InstructionsCard.js","components/RecipeListing/RecipesList.js","components/AddNew/AddData.js","components/Main.js","components/Nav.js","App.js","index.js"],"names":["Header","href","className","src","Footer","Home","Container","Row","Jumbotron","fluid","muted","autoPlay","loop","herovideo","type","About","Recipecard","props","info","undefined","Card","Title","name","image","Img","alt","Text","prepTime","servings","Button","to","link","id","Spinner","animation","variant","SearchBox","onChange","search","placeholder","InstructionsCard","useState","recipe","setRecipe","useParams","history","useHistory","useEffect","axios","get","then","response","data","recipeInfo","ingredients","quantity","ingredientName","instructions","onClick","goBack","size","delete","console","log","RecipeList","recipes","setRecipes","searchInput","setSearchInput","loaded","setLoaded","res","message","recipesList","filter","toLowerCase","includes","map","ingredient1","ingredient2","ingredient3","ingredient4","ingredient5","path","exact","event","target","value","AddData","incredients","newRecipe","setNewRecipe","setIngredients","valueChangeHandler","e","ingredientChangeHandler","i","list","onSubmit","preventDefault","post","reset","htmlFor","maxLength","required","max","min","Form","Label","_","Group","Col","Control","newIng","length","prevState","Landing","Info","Nav","Recipes","RecipesList","Main","component","Navigation","Navbar","Toggle","aria-controls","Link","NavbarCollapse","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1fdf17d4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../components.css\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div>\r\n      <a href=\"https://akselinkoodit.github.io/Recipes/\">\r\n        <h1 className=\"logo\">\r\n          <img src=\"https://img.icons8.com/ios-filled/50/000000/salt-bae.png\" />\r\n          {/* Icon from <a href=\"https://icons8.com/icon/41086/salt-bae\">Salt Bae icon by Icons8</a> */}\r\n        </h1>\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"../components.css\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <hr></hr>\r\n      <p>This tiny thing here is the footer</p>\r\n      <a href=\"https://icons8.com/icon/41086/salt-bae\">Icons from Icons8</a>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","export default __webpack_public_path__ + \"static/media/video.c7358f4d.mp4\";","import React from \"react\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\nimport herovideo from \"../../assets/video.mp4\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport \"../components.css\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Jumbotron fluid>\r\n          <video className=\"bgVideo\" muted autoPlay loop>\r\n            <source src={herovideo} type=\"video/mp4\" />\r\n          </video>\r\n        </Jumbotron>\r\n      </Row>\r\n      <h1>Main page</h1>\r\n      <div>\r\n        Welcome to my recipes page! Here I'll use an api call to bring you the\r\n        finest, most delicious dishes to you. Using React.js and{\" \"}\r\n        <em className=\"strikethrough\">css</em> React.bootstrap libraries I'll\r\n        make this a thing of beauty!\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <h1>About</h1>\r\n      <p>\r\n        This is a study project for React course at Helsinki Business College\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\n\r\nimport axios from \"axios\";\r\n\r\nconst Recipecard = (props) => {\r\n  let info = undefined;\r\n\r\n  if (!props) {\r\n    info = <Spinner animation=\"border\" variant=\"primary\" />;\r\n  } else {\r\n    info = (\r\n      <Card key={props.id} className=\"recipecard\">\r\n        <Card.Title>{props.name}</Card.Title>\r\n        {props.image == \"\" ? (\r\n          <Card.Img\r\n            src={`https://source.unsplash.com/1600x900/?${props.name}`}\r\n            alt={props.name}\r\n          />\r\n        ) : (\r\n          <Card.Img src={`${props.image}`} alt={props.name} />\r\n        )}\r\n        <Card.Text>Preparation time: {props.prepTime} min</Card.Text>\r\n        <Card.Text>Servings: {props.servings}</Card.Text>\r\n        <Button>\r\n          <Link to={`/allRecipes/${props.link}`}>See instructions</Link>\r\n        </Button>\r\n      </Card>\r\n    );\r\n  }\r\n  return (\r\n    <div>{info}</div>\r\n\r\n    // <Card key={props.id} className=\"recipecard\">\r\n    //   <Card.Title>{props.name}</Card.Title>\r\n    //   {props.image == \"\" ? (\r\n    //     <Card.Img\r\n    //       src={`https://source.unsplash.com/1600x900/?${props.name}`}\r\n    //       alt={props.name}\r\n    //     />\r\n    //   ) : (\r\n    //     <Card.Img src={`${props.image}`} alt={props.name} />\r\n    //   )}\r\n    //   <Card.Text>Preparation time: {props.prepTime} min</Card.Text>\r\n    //   <Card.Text>Servings: {props.servings}</Card.Text>\r\n    //   <Button>\r\n    //     <Link to={`/allRecipes/${props.link}`}>See instructions</Link>\r\n    //   </Button>\r\n    // </Card>\r\n  );\r\n};\r\n\r\nexport default Recipecard;\r\n","import React from \"react\";\r\n\r\nconst SearchBox = (props) => {\r\n  return (\r\n    <div>\r\n      <input type=\"text\" onChange={props.search} placeholder=\"Search recipes\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst InstructionsCard = () => {\r\n  const [recipe, setRecipe] = useState();\r\n  let { id } = useParams();\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!recipe) {\r\n      axios\r\n        .get(\"https://gentle-plateau-95526.herokuapp.com/recipe/find/\" + id)\r\n        .then((response) => setRecipe(response.data));\r\n    }\r\n  });\r\n\r\n  const removeRecipe = () => {\r\n    axios.delete(\r\n      \"https://gentle-plateau-95526.herokuapp.com/recipe/remove/\" + id\r\n    );\r\n    console.log(\"Trying to remove a recipe...\" + id);\r\n  };\r\n\r\n  let recipeInfo = undefined;\r\n\r\n  if (!recipe) {\r\n    recipeInfo = <Spinner animation=\"border\" variant=\"primary\" />;\r\n  }\r\n  if (recipe) {\r\n    recipeInfo = (\r\n      <>\r\n        <h4>Ingredients:</h4>\r\n        <ul className=\"list\">\r\n          <li>\r\n            {recipe.ingredients[0].quantity}\r\n            {\" of \"}\r\n            {recipe.ingredients[0].ingredientName}\r\n          </li>\r\n          {recipe.ingredients[1] && (\r\n            <li>\r\n              {recipe.ingredients[1].quantity}\r\n              {\" of \"}\r\n              {recipe.ingredients[1].ingredientName}\r\n            </li>\r\n          )}\r\n          {recipe.ingredients[2] && (\r\n            <li>\r\n              {recipe.ingredients[2].quantity}\r\n              {\" of \"}\r\n              {recipe.ingredients[2].ingredientName}\r\n            </li>\r\n          )}\r\n          {recipe.ingredients[3] && (\r\n            <li>\r\n              {recipe.ingredients[3].quantity}\r\n              {\" of \"}\r\n              {recipe.ingredients[3].ingredientName}\r\n            </li>\r\n          )}\r\n          {recipe.ingredients[4] && (\r\n            <li>\r\n              {recipe.ingredients[4].quantity}\r\n              {\" of \"}\r\n              {recipe.ingredients[4].ingredientName}\r\n            </li>\r\n          )}\r\n          {recipe.ingredients[5] && (\r\n            <li>\r\n              {recipe.ingredients[5].quantity}\r\n              {\" of \"}\r\n              {recipe.ingredients[5].ingredientName}\r\n            </li>\r\n          )}\r\n        </ul>\r\n        <h4>Instructions:</h4>\r\n        <p>{recipe.instructions}</p>\r\n        <Button onClick={() => history.goBack()}>Back to recipes</Button>\r\n        <Button size=\"sm\" variant=\"danger\" onClick={removeRecipe}>\r\n          Remove this recipe\r\n        </Button>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return <div>{recipeInfo}</div>;\r\n};\r\nexport default InstructionsCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Recipecard from \"./Recipecard\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport InstructionsCard from \"./InstructionsCard\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\n\r\n//import \"../components.css\";\r\nimport axios from \"axios\";\r\n\r\nconst RecipeList = () => {\r\n  const [recipes, setRecipes] = useState([]);\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n  let [loaded, setLoaded] = useState(false);\r\n\r\n  const searchValueHandler = (event) => {\r\n    setSearchInput(event.target.value);\r\n    console.log(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      //.get(\"http://localhost:3003/recipes\")\r\n      .get(\"https://gentle-plateau-95526.herokuapp.com/recipe/all\")\r\n      .then((res) => setRecipes(res.data))\r\n      .then(setLoaded(true));\r\n  }, []);\r\n  let message = \"\";\r\n  if (!loaded) {\r\n    message = <Spinner animation=\"border\" variant=\"primary\" />;\r\n  }\r\n\r\n  const filteredRecipes = recipes.filter((recipe) => {\r\n    return recipe.name.toLowerCase().includes(searchInput.toLowerCase());\r\n  });\r\n\r\n  const recipesList = filteredRecipes.map((recipe) => {\r\n    return (\r\n      <div>\r\n        <Recipecard\r\n          key={recipe.id}\r\n          name={recipe.name}\r\n          image={recipe.image}\r\n          servings={recipe.servings}\r\n          prepTime={recipe.prepTime}\r\n          ingredient1={recipe.ingredient1}\r\n          ingredient2={recipe.ingredient2}\r\n          ingredient3={recipe.ingredient3}\r\n          ingredient4={recipe.ingredient4}\r\n          ingredient5={recipe.ingredient5}\r\n          instructions={recipe.instructions}\r\n          link={recipe.id}\r\n        />\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"recipes\">\r\n      <Switch>\r\n        <Route path=\"/:recipes\" exact>\r\n          <div className=\"card2\">\r\n            <h1>Recipe page</h1>\r\n            <SearchBox search={searchValueHandler} />\r\n          </div>\r\n          <div>{message}</div>\r\n          <div className=\"recipelistlist\">{recipesList}</div>\r\n        </Route>\r\n        <Route path=\"/allRecipes/:id\">\r\n          <InstructionsCard />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\nexport default RecipeList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Popup from \"./Popup\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport \"../components.css\";\r\n\r\nconst AddData = () => {\r\n  const [newRecipe, setNewRecipe] = useState({\r\n    name: \"\",\r\n    prepTime: \"\",\r\n    servings: \"\",\r\n    incredients: [],\r\n    instructions: \"\",\r\n    image: \"\",\r\n  });\r\n\r\n  const [ingredients, setIngredients] = useState([\r\n    { id: 1, quantity: \"\", ingredientName: \"\" },\r\n  ]);\r\n\r\n  // useEffect(() => {\r\n  //   axios\r\n  //     //.get(\"http://localhost:3003/recipes\")\r\n  //     .get(\"https://gentle-plateau-95526.herokuapp.com/recipe/add\")\r\n  //     .then((response) => setNewRecipe(response.data));\r\n  // }, []);\r\n\r\n  const valueChangeHandler = (e) => {\r\n    setNewRecipe({ ...newRecipe, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const ingredientChangeHandler = (e, i) => {\r\n    const { name, value } = e.target;\r\n    const list = [...ingredients];\r\n    list[i][name] = value;\r\n    setIngredients(list);\r\n    setNewRecipe({ ...newRecipe, ingredients: ingredients });\r\n  };\r\n  const addMore = (e) => {\r\n    e.preventDefault();\r\n    const newIng = {\r\n      id: ingredients.length + 1,\r\n      ingredientName: \"\",\r\n      quantity: \"\",\r\n    };\r\n    setIngredients((prevState) => [...prevState, newIng]);\r\n  };\r\n\r\n  const submitRecipe = (e) => {\r\n    e.preventDefault();\r\n    axios.post(\r\n      \"https://gentle-plateau-95526.herokuapp.com/recipe/add\",\r\n      newRecipe\r\n    );\r\n    e.target.reset();\r\n    //alert(\"Recipe added!\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Add a new recipe:</h1>\r\n      <div className=\"form\">\r\n        <form onSubmit={submitRecipe}>\r\n          <div>\r\n            <label htmlFor=\"name\">Recipe name:</label>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"example\"\r\n              maxLength=\"30\"\r\n              name=\"name\"\r\n              id=\"name\"\r\n              onChange={valueChangeHandler}\r\n              required\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"image\">Image url (optional):</label>\r\n            <input\r\n              type=\"text\"\r\n              maxLength=\"255\"\r\n              placeholder=\"https://exampleimages.com/example.png\"\r\n              name=\"image\"\r\n              id=\"image\"\r\n              onChange={valueChangeHandler}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label htmlFor=\"prepTime\">Preparation time (minutes):</label>\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"45\"\r\n              name=\"prepTime\"\r\n              id=\"prepTime\"\r\n              max=\"999\"\r\n              min=\"0\"\r\n              onChange={valueChangeHandler}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"servings\">How many servings:</label>\r\n            <input\r\n              type=\"number\"\r\n              name=\"servings\"\r\n              placeholder=\"4\"\r\n              id=\"servings\"\r\n              max=\"99\"\r\n              min=\"0\"\r\n              onChange={valueChangeHandler}\r\n            />\r\n          </div>\r\n          <section>\r\n            <Form.Label>Ingredients:</Form.Label>\r\n            {ingredients.map((_, i) => {\r\n              return (\r\n                <Form.Group key={i}>\r\n                  <Row>\r\n                    <Col>\r\n                      <Form.Label htmlFor=\"quantity\">Quantity</Form.Label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        name=\"quantity\"\r\n                        onChange={(e) => ingredientChangeHandler(e, i)}\r\n                      />\r\n                    </Col>\r\n                    <Col>\r\n                      <Form.Label htmlFor=\"inggredientName\">\r\n                        Ingredient\r\n                      </Form.Label>\r\n                      <Form.Control\r\n                        maxLength=\"255\"\r\n                        type=\"text\"\r\n                        name=\"ingredientName\"\r\n                        onChange={(e) => ingredientChangeHandler(e, i)}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                </Form.Group>\r\n              );\r\n            })}\r\n\r\n            <Button variant=\"secondary\" onClick={addMore}>\r\n              add another ingredient\r\n            </Button>\r\n          </section>\r\n          <div>\r\n            <label htmlFor=\"instructions\">\r\n              Instructions (max 255 characters):\r\n            </label>\r\n            <textarea\r\n              name=\"instructions\"\r\n              placeholder=\"mix everything and cook it\"\r\n              id=\"instructions\"\r\n              maxLength=\"255\"\r\n              onChange={valueChangeHandler}\r\n              required\r\n            ></textarea>\r\n          </div>\r\n          {/* <Button onClick={() => submitRecipe} value=\"Next\"> */}\r\n          <Button type=\"submit\">Add recipe</Button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddData;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Home from \"./Home/Home\";\r\nimport About from \"./About/About\";\r\nimport RecipesList from \"./RecipeListing/RecipesList\";\r\nimport AddData from \"./AddNew/AddData\";\r\nimport InstructionsCard from \"./RecipeListing/InstructionsCard\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport axios from \"axios\";\r\n\r\nconst Landing = () => {\r\n  return (\r\n    <div>\r\n      <Home />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Info = () => {\r\n  return (\r\n    <Nav>\r\n      <About />\r\n    </Nav>\r\n  );\r\n};\r\n\r\nconst Recipes = () => {\r\n  return (\r\n    <Nav>\r\n      <RecipesList />\r\n    </Nav>\r\n  );\r\n};\r\n\r\nconst Main = () => {\r\n  return (\r\n    <div>\r\n      <Switch>\r\n        {/* <Route path=\"/Recipes\" exact component={Landing} /> */}\r\n        <Route path=\"/\" exact component={Landing} />\r\n        <Route path=\"/allRecipes\" component={Recipes}>\r\n          <RecipesList />\r\n        </Route>\r\n        <Route path=\"/about\" component={Info} />\r\n        <Route path=\"/add\">\r\n          <div className=\"newRecipePage\">\r\n            <AddData />\r\n          </div>\r\n        </Route>\r\n        <Route path=\"/allRecipes/:id\">\r\n          <InstructionsCard />\r\n          <p>Recipe here</p>\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import { Link, NavLink } from \"react-router-dom\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport NavbarCollapse from \"react-bootstrap/NavbarCollapse\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { IndexLinkContainer } from \"react-router-bootstrap\";\r\nimport \"./components.css\";\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <div>\r\n      <Navbar>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <IndexLinkContainer to=\"/\">\r\n          <Nav.Link>Akseli's specials</Nav.Link>\r\n        </IndexLinkContainer>\r\n        <NavbarCollapse>\r\n          <Nav variant=\"tabs\">\r\n            <LinkContainer to=\"/allRecipes\">\r\n              <Nav.Link>Recipes</Nav.Link>\r\n            </LinkContainer>\r\n\r\n            <LinkContainer to=\"/add\">\r\n              <Nav.Link>Add recipe</Nav.Link>\r\n            </LinkContainer>\r\n\r\n            <LinkContainer to=\"/about\">\r\n              <Nav.Link>About</Nav.Link>\r\n            </LinkContainer>\r\n          </Nav>\r\n        </NavbarCollapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import Header from \"./components/Header/Header\";\nimport Footer from \"./components/Footer/Footer\";\nimport Main from \"./components/Main\";\nimport Home from \"./components/Home/Home\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Navigation from \"./components/Nav\";\nimport { Container } from \"react-bootstrap\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nconst App = () => {\n  return (\n    <Container className=\"bg\">\n      <Router>\n        <Row className=\"header\">\n          <Header />\n          <Navigation />\n        </Row>\n        <hr></hr>\n        <Main />\n        <Footer />\n      </Router>\n    </Container>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}